// <auto-generated />
using System;
using Hackathon.Repositories.SQLLite;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Hackathon.Repositories.Migrations
{
    [DbContext(typeof(SQLLiteContext))]
    partial class SQLLiteContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.2-rtm-30932");

            modelBuilder.Entity("Hackathon.Model.Event", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreationDate");

                    b.Property<string>("Description");

                    b.Property<int>("GoalSubscriberId");

                    b.HasKey("Id");

                    b.HasIndex("GoalSubscriberId");

                    b.ToTable("Events");
                });

            modelBuilder.Entity("Hackathon.Model.GoalSubscriber", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("CompletedAmount");

                    b.Property<int>("SubscriberId");

                    b.Property<int>("UserGoalId");

                    b.HasKey("Id");

                    b.HasIndex("SubscriberId");

                    b.HasIndex("UserGoalId");

                    b.ToTable("GoalSubscribers");
                });

            modelBuilder.Entity("Hackathon.Model.GoalType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("GoalTypes");

                    b.HasData(
                        new { Id = 1, Description = "Stop spending so much time on social media", Name = "Social Media" },
                        new { Id = 2, Description = "Stop cursing", Name = "Curse Jar" },
                        new { Id = 3, Description = "Save for a trip", Name = "Trip" }
                    );
                });

            modelBuilder.Entity("Hackathon.Model.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("Age");

                    b.Property<string>("Email");

                    b.Property<string>("Name");

                    b.Property<string>("UserName");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new { Id = 1, Age = 32, Email = "johndoe@gmail.com", Name = "John Doe", UserName = "JohnDoe" },
                        new { Id = 2, Age = 45, Email = "annadoe@outlook.com", Name = "Anna Doe", UserName = "AnnaDoe" },
                        new { Id = 3, Age = 28, Email = "jimmy@gmail.com", Name = "Jimmy Chamberlin", UserName = "Jimmy" },
                        new { Id = 5, Age = 55, Email = "dominic@yahoo.com", Name = "Dominic Howard", UserName = "Dominic" }
                    );
                });

            modelBuilder.Entity("Hackathon.Model.UserGoal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AdministrationUserId");

                    b.Property<int>("Amount");

                    b.Property<DateTime>("DeadlineDate");

                    b.Property<int>("GoalTypeId");

                    b.Property<string>("Name");

                    b.Property<string>("Unit");

                    b.HasKey("Id");

                    b.HasIndex("AdministrationUserId");

                    b.HasIndex("GoalTypeId");

                    b.ToTable("UserGoals");
                });

            modelBuilder.Entity("Hackathon.Model.Event", b =>
                {
                    b.HasOne("Hackathon.Model.GoalSubscriber", "GoalSubscriber")
                        .WithMany()
                        .HasForeignKey("GoalSubscriberId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Hackathon.Model.GoalSubscriber", b =>
                {
                    b.HasOne("Hackathon.Model.User", "Subscriber")
                        .WithMany()
                        .HasForeignKey("SubscriberId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Hackathon.Model.UserGoal", "UserGoal")
                        .WithMany()
                        .HasForeignKey("UserGoalId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Hackathon.Model.UserGoal", b =>
                {
                    b.HasOne("Hackathon.Model.User", "AdministrationUser")
                        .WithMany()
                        .HasForeignKey("AdministrationUserId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Hackathon.Model.GoalType", "GoalType")
                        .WithMany()
                        .HasForeignKey("GoalTypeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
