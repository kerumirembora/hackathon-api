// <auto-generated />
using System;
using Hackathon.Repositories.SQLLite;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Hackathon.Repositories.Migrations
{
    [DbContext(typeof(SQLLiteContext))]
    [Migration("20180828104906_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.2-rtm-30932");

            modelBuilder.Entity("Hackathon.Model.Event", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreationDate");

                    b.Property<string>("Description");

                    b.Property<int>("GoalSubscriberId");

                    b.HasKey("Id");

                    b.HasIndex("GoalSubscriberId");

                    b.ToTable("Events");
                });

            modelBuilder.Entity("Hackathon.Model.GoalSubscriber", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("CompletedAmount");

                    b.Property<int>("SubscriberId");

                    b.Property<int>("UserGoalId");

                    b.HasKey("Id");

                    b.HasIndex("SubscriberId");

                    b.HasIndex("UserGoalId");

                    b.ToTable("GoalSubscribers");
                });

            modelBuilder.Entity("Hackathon.Model.GoalType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("GoalTypes");
                });

            modelBuilder.Entity("Hackathon.Model.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("Age");

                    b.Property<string>("Name");

                    b.Property<string>("UserName");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Hackathon.Model.UserGoal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AdministrationUserId");

                    b.Property<int>("Amount");

                    b.Property<DateTime>("DeadlineDate");

                    b.Property<int>("GoalTypeId");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.HasIndex("AdministrationUserId");

                    b.HasIndex("GoalTypeId");

                    b.ToTable("UserGoals");
                });

            modelBuilder.Entity("Hackathon.Model.Event", b =>
                {
                    b.HasOne("Hackathon.Model.GoalSubscriber", "GoalSubscriber")
                        .WithMany()
                        .HasForeignKey("GoalSubscriberId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Hackathon.Model.GoalSubscriber", b =>
                {
                    b.HasOne("Hackathon.Model.User", "Subscriber")
                        .WithMany()
                        .HasForeignKey("SubscriberId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Hackathon.Model.UserGoal", "UserGoal")
                        .WithMany()
                        .HasForeignKey("UserGoalId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Hackathon.Model.UserGoal", b =>
                {
                    b.HasOne("Hackathon.Model.User", "AdministrationUser")
                        .WithMany()
                        .HasForeignKey("AdministrationUserId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Hackathon.Model.GoalType", "GoalType")
                        .WithMany()
                        .HasForeignKey("GoalTypeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
